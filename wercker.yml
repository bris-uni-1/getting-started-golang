box:
  id: golang
  ports:
    - "5000"

dev:
  steps:
    - internal/watch:
        code: |
          go build ./...
          ./source
        reload: true

# Build definition
build:
  # The steps that will be executed on build
  steps:

    # golint step!
    - wercker/golint

    # Build the project
    - script:
        name: go build
        code: |
            CGO_ENABLED=0 go build -a -o hello-world ./...

    # Test the project
    - script:
        name: go test
        code: |
          go test ./...

    - script:
        name: ls-wercker-root
        code: |
            echo WERCKER_ROOT=$WERCKER_ROOT; ls -ls $WERCKER_ROOT
        
    - script:
        name: copy-output
        code: |
            mv hello-world $WERCKER_OUTPUT_DIR
        
    - script:
        name: ls-wercker-output-dir
        code: |
            echo WERCKER_OUTPUT_DIR=$WERCKER_OUTPUT_DIR; ls -ls $WERCKER_OUTPUT_DIR

push-fat:
  steps:
    - script:
        name: ls-wercker-root
        code: |
            echo WERCKER_ROOT=$WERCKER_ROOT; ls -ls $WERCKER_ROOT

    - internal/docker-push:
        username: $DOCKERHUB_USERNAME
        password: $DOCKERHUB_PASSWORD
        cmd: /pipeline/source/hello-world
        tag: latest
        repository: odxdemo/hello-world
        ports: "5000"

push-scratch-docker:
    steps:
        - script:
            name: ls-wercker-root
            code: |
                echo WERCKER_ROOT=$WERCKER_ROOT; ls -ls $WERCKER_ROOT

        - internal/docker-scratch-push:
            username: $DOCKERHUB_USERNAME
            password: $DOCKERHUB_PASSWORD
            cmd: ./hello-world
            tag: latest
            repository: odxdemo/hello-world-scratch
            ports: "5000"
